server.port=9092
spring.application.name=User-Ratings-service
eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka
eureka.client.instance.preferIpAddress = true
eureka.client.registryFetchIntervalSeconds=5
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true

#server.port=${PORT:0}
#
#eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#eureka.client.instance.preferIpAddress = true
#management.endpoints.jmx.exposure.include=health,info
#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=env,beans
#management.endpoint.health.enabled=true
#management.endpoints.jmx.exposure.include=*
#management.endpoints.web.base-path=/
#management.endpoints.web.cors.allowed-origins=true
#management.endpoint.health.show-details=always
#management.security.enabled=false
hystrix.dashboard.proxyStreamAllowList=*

#spring.profiles.active=chaos-monkey
##Determine whether should execute or not
#chaos.monkey.enabled=true
##How many requests are to be attacked. 1: attack each request; 5: each 5th request is attacked
#chaos.monkey.assaults.level=1
##Minimum latency in ms added to the request
#chaos.monkey.assaults.latencyRangeStart=1000
##Maximum latency in ms added to the request
#chaos.monkey.assaults.latencyRangeEnd=2000
##Latency assault active
#chaos.monkey.assaults.latencyActive=true
##Exception assault active
#chaos.monkey.assaults.exceptionsActive=false
##AppKiller assault active
#chaos.monkey.assaults.killApplicationActive=false
#
##Controller watcher active
#chaos.monkey.watcher.controller=false
##RestController watcher active
#chaos.monkey.watcher.restController=false
##Service watcher active
#chaos.monkey.watcher.service=true
##Repository watcher active
#chaos.monkey.watcher.repository=false
##Component watcher active
#chaos.monkey.watcher.component=false